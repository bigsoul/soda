#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// установка значений по умолчанию при создании узла
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда     
		
		Объект.HTTPИмяСервиса = "sed-web";
		
		Объект.WEBURIПространстваИменСервиса = "asrv.r5g.ru";
		Объект.WEBИмяСервиса = "SED_WEB";  
		Объект.WEBИмяТочкиПодключения = "SED_WEBSoap";
		
	КонецЕсли;
	
	ОбновитьПредставлениеHTTP();
	ОбновитьПредставлениеSOAP();
	
	УправлениеОтметкойНезаполненного(); 
	
	//Строка = СОД_СинхронизацияПовтИсп.ПолучитьИмяБазы(); 
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПротоколДоставкиОтправленийПриИзменении(Элемент)
	УправлениеОтметкойНезаполненного();
КонецПроцедуры

&НаКлиенте
Процедура HTTPСерверПриИзменении(Элемент)
	
	ОбновитьПредставлениеHTTP();
	
КонецПроцедуры

&НаКлиенте
Процедура HTTPПортПриИзменении(Элемент)
	
	ОбновитьПредставлениеHTTP();
	
КонецПроцедуры

&НаКлиенте
Процедура HTTPБазаДанныхПриИзменении(Элемент)
	
	ОбновитьПредставлениеHTTP();
	
КонецПроцедуры

&НаКлиенте
Процедура HTTPИмяСервисаПриИзменении(Элемент)
	
	ОбновитьПредставлениеHTTP();
	
КонецПроцедуры

&НаКлиенте
Процедура WEBСерверПриИзменении(Элемент)
	ОбновитьПредставлениеSOAP();
КонецПроцедуры

&НаКлиенте
Процедура WEBПортПриИзменении(Элемент)
	ОбновитьПредставлениеSOAP();
КонецПроцедуры

&НаКлиенте
Процедура WEBБазаДанныхПриИзменении(Элемент)
	ОбновитьПредставлениеSOAP();
КонецПроцедуры

&НаКлиенте
Процедура AMQPИсходящееВиртуальныйХостПриИзменении(Элемент)
	
	ОбновитьМаршрутыAMQP();
	
КонецПроцедуры

&НаКлиенте
Процедура AMQPВходящееВиртуальныйХостПриИзменении(Элемент)
	
	ОбновитьМаршрутыAMQP();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура AMPQПроверитьСоединение(Команда)
	AMPQПроверитьСоединениеНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура WEBПроверитьСоединение(Команда)
	WEBПроверитьСоединениеНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура HTTPПроверитьСоединение(Команда)
	HTTPПроверитьСоединениеНаСервере();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// КОМАНДЫ: СЕРВЕР

&НаСервере
Процедура AMPQПроверитьСоединениеНаСервере()
	
	Клиент = СОД_Синхронизация.ПолучитьAMQPКлиентHTTP(Объект, 5); 
	
	Если Клиент <> Неопределено Тогда
		СОД_Общий.СообщитьПользователю("Соединение успешно установленно !");
	КонецЕсли; 
		
	Клиент = Неопределено;
	
КонецПроцедуры

&НаСервере
Процедура WEBПроверитьСоединениеНаСервере()
	
	Если СОД_Синхронизация.ПолучитьWSПрокси(Объект) <> Неопределено Тогда
		СОД_Общий.СообщитьПользователю("Соединение успешно установленно !");
	Иначе
		СОД_Общий.СообщитьПользователю("Не удалось установить соединение !");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура HTTPПроверитьСоединениеНаСервере()
	
	Если СОД_Синхронизация.ВыполнитьHSЗапросRun(Объект) = "Успех" Тогда
		СОД_Общий.СообщитьПользователю("Соединение успешно установленно !");
	Иначе
		СОД_Общий.СообщитьПользователю("Не удалось установить соединение !");
	КонецЕсли;
	
КонецПроцедуры

// СЛУЖЕБНЫЕ: СЕРВЕР

&НаСервере
Процедура УправлениеОтметкойНезаполненного() 
	
	Если Объект.ПротоколДоставкиОтправлений = Перечисления.СОД_ПротоколыДоставкиОтправлений.HTTPСервис Тогда
		
		УстановитьОтметкаНезаполненного(ПланыОбмена.СОД_Узлы.ПолучитьОбязательныеРеквизитыHTTP(), Истина);
		УстановитьОтметкаНезаполненного(ПланыОбмена.СОД_Узлы.ПолучитьОбязательныеРеквизитыSOAP(), Ложь);
		
	ИначеЕсли Объект.ПротоколДоставкиОтправлений = Перечисления.СОД_ПротоколыДоставкиОтправлений.WEBСервис Тогда  
		
		УстановитьОтметкаНезаполненного(ПланыОбмена.СОД_Узлы.ПолучитьОбязательныеРеквизитыHTTP(), Ложь);
		УстановитьОтметкаНезаполненного(ПланыОбмена.СОД_Узлы.ПолучитьОбязательныеРеквизитыSOAP(), Истина);

	Иначе 
		
		УстановитьОтметкаНезаполненного(ПланыОбмена.СОД_Узлы.ПолучитьОбязательныеРеквизитыHTTP(), Ложь);
		УстановитьОтметкаНезаполненного(ПланыОбмена.СОД_Узлы.ПолучитьОбязательныеРеквизитыSOAP(), Ложь);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтметкаНезаполненного(МассивРеквизитов, Отметка)
	
	Для Каждого Имя Из МассивРеквизитов Цикл 
		Если Элементы.Найти(Имя) <> Неопределено Тогда 
			Элементы[Имя].ОтметкаНезаполненного = Отметка;
			Элементы[Имя].АвтоОтметкаНезаполненного = Отметка;
		КонецЕсли;	
	КонецЦикла;
		
КонецПроцедуры

&НаСервере
Процедура ОбновитьМаршрутыAMQP()
	
	ИмяБазыВКластере = СОД_СинхронизацияПовтИсп.ПолучитьИмяБазы();

	Объект.AMQPИсходящееИмяТочкиОбмена = Объект.AMQPИсходящееВиртуальныйХост + "." + ИмяБазыВКластере; 
	
	Объект.AMQPИсходящееИмяОчередиТранспорт 				= "t." + Объект.Код;
	Объект.AMQPИсходящееИмяОчередиТранспортПодтверждение 	= "c." + Объект.Код;
	Объект.AMQPИсходящееИмяОчередиТочкаАктуальности 		= "a." + Объект.Код;  
	
	Объект.AMQPВходящееИмяТочкиОбмена = Объект.AMQPВходящееВиртуальныйХост + "." + Объект.Наименование;  
	
	Объект.AMQPВходящееИмяОчередиТранспорт					= "t." + Объект.Код;  
	Объект.AMQPВходящееИмяОчередиТранспортПодтверждение		= "c." + Объект.Код;
	Объект.AMQPВходящееИмяОчередиТочкаАктуальности			= "a." + Объект.Код;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьПредставлениеHTTP()
	
	HTTPСтрокаСоединения = ПланыОбмена.СОД_Узлы.ПолучитьПредставлениеHTTP(Объект);
	
КонецПроцедуры  

&НаСервере
Процедура ОбновитьПредставлениеSOAP()
	
	SOAPСтрокаСоединения = ПланыОбмена.СОД_Узлы.ПолучитьПредставлениеSOAP(Объект);
	
КонецПроцедуры

#КонецОбласти